USE Campus6

SELECT TD.PEOPLE_CODE_ID
	,TD.EVENT_ID
	,TD.SECTION
	,C.CALENDAR_DATE + C.START_TIME [Start1]
	,C.CALENDAR_DATE + C.END_TIME [End1]
	,C.CALENDAR_KEY
	,TD2.EVENT_ID
	,TD2.SECTION
	,C2.CALENDAR_DATE + C2.START_TIME [Start2]
	,C2.CALENDAR_DATE + C2.END_TIME [End2]
	,C2.CALENDAR_KEY
--First calendar event
FROM TRANSCRIPTDETAIL TD
INNER JOIN SECTIONSCHEDULE SS
	ON TD.ACADEMIC_YEAR = SS.ACADEMIC_YEAR
		AND TD.ACADEMIC_TERM = SS.ACADEMIC_TERM
		AND TD.ACADEMIC_SESSION = SS.ACADEMIC_SESSION
		AND TD.EVENT_ID = SS.EVENT_ID
		AND TD.EVENT_SUB_TYPE = SS.EVENT_SUB_TYPE
		AND TD.SECTION = SS.SECTION
		AND TD.ADD_DROP_WAIT = 'A'
INNER JOIN CALENDARDETAIL CD
	ON CD.EVENT_KEY = SS.CALENDARDET_EVENT_KEY
INNER JOIN CALENDAR C
	ON C.EVENT_KEY = CD.EVENT_KEY
--Conflicting calendar event
INNER JOIN TRANSCRIPTDETAIL TD2
	ON TD.PEOPLE_CODE_ID = TD2.PEOPLE_CODE_ID
INNER JOIN SECTIONSCHEDULE SS2
	ON TD2.ACADEMIC_YEAR = SS2.ACADEMIC_YEAR
		AND TD2.ACADEMIC_TERM = SS2.ACADEMIC_TERM
		AND TD2.ACADEMIC_SESSION = SS2.ACADEMIC_SESSION
		AND TD2.EVENT_ID = SS2.EVENT_ID
		AND TD2.EVENT_SUB_TYPE = SS2.EVENT_SUB_TYPE
		AND TD2.SECTION = SS2.SECTION
		AND TD2.ADD_DROP_WAIT = 'A'
INNER JOIN CALENDARDETAIL CD2
	ON CD2.EVENT_KEY = SS2.CALENDARDET_EVENT_KEY
INNER JOIN CALENDAR C2
	ON C2.EVENT_KEY = CD2.EVENT_KEY
WHERE (
		C.CALENDAR_DATE + C.START_TIME BETWEEN C2.CALENDAR_DATE + C2.START_TIME AND C2.CALENDAR_DATE + C2.END_TIME
		OR C.CALENDAR_DATE + C.END_TIME BETWEEN C2.CALENDAR_DATE + C2.START_TIME AND C2.CALENDAR_DATE + C2.END_TIME
		OR C2.CALENDAR_DATE + C2.START_TIME BETWEEN C.CALENDAR_DATE + C.START_TIME AND C.CALENDAR_DATE + C.END_TIME
		--Other method that returns fewer results?
		--C2.CALENDAR_DATE + C2.START_TIME >= C.CALENDAR_DATE + C.START_TIME
		--AND C.CALENDAR_DATE + C.END_TIME >= C2.CALENDAR_DATE + C2.END_TIME
		)
	AND C.CALENDAR_KEY <> C2.CALENDAR_KEY
	AND TD.ACADEMIC_YEAR = '2020'
	AND TD.ACADEMIC_TERM = 'SUMMER'
